version: '2'

# this docker configuation is for dev use only
# it is supposed that your declared some ENV variables:
#   - ${FRONTEND} points to matchID-frontend (from GitHub, branch 'master')
#   - ${PROJECTS} points to your projects path
#   - ${UPLOAD} points to your upload path
# the dev conf allows you to change both python and nodejs code and conf live they will be
# updated within the docker instances

# for dev use it is recommanded to have at least 8Gb of memory and SSD and 4 vCPU, to ensure
# good performance and testing.

# for production use many adaptation will be needed if you use docker
# - assume you docker images with a custum managed repo
# - securize nginx routes allowing only stricly needed routes of API
# - build the static files from node frontend and put them to the nginx
# - build a cluster for elasticsearch
# - use real volumes : S3-like storage for configurations (using volumes) of front and back,
#   and DB-storage for ES volume like SSD volumes (or memory storage still better)

services:
  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8088:80"
    restart: always

  frontend:
    build:
      context: ${FRONTEND}
      dockerfile: Dockerfile.dev
      args:
        proxy: ${http_proxy}
    image: matchid-frontend:latest
    container_name: matchid-front
    volumes:
      - ${FRONTEND}/index.html:/matchid/index.html
      - ${FRONTEND}/.babelrc:/matchid/.babelrc
      - ${FRONTEND}/.editorconfig:/matchid/.editorconfig
      - ${FRONTEND}/.eslintignore:/matchid/.eslintignore
      - ${FRONTEND}/.eslintrc.js:/matchid/.eslintrc.js
      - ${FRONTEND}/matchIdConfig:/matchid/matchIdConfig/
      - ${FRONTEND}/config:/matchid/config/
      - ${FRONTEND}/src:/matchid/src/
      - ${FRONTEND}/build:/matchid/build/
    # ports:
    #   - "8080:8080"

  backend:
    build:
      context: .
      args:
        proxy: ${http_proxy}
    image: matchid-backend:latest
    container_name: matchid-backend
    volumes:
      - ./code/:/matchid/code/
      - ./conf/:/matchid/conf/
      - ${PROJECTS}:/matchid/projects/
      - ./log:/matchid/log/
      - ${UPLOAD}:/matchid/upload/
      - ${MODELS}:/matchid/models/
      - ./referential_data/:/matchid/referential_data/
      - ${FRONTEND}/matchIdConfig:/matchid/matchIdConfig/
    # ports:
    #   - "8081:8081"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  esnode2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode2
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata2:/usr/share/elasticsearch/data

  esnode3:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode3
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata3:/usr/share/elasticsearch/data

  esnode4:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode4
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata4:/usr/share/elasticsearch/data

  esnode5:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode5
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata5:/usr/share/elasticsearch/data

  esnode6:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode6
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata6:/usr/share/elasticsearch/data


  esnode7:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode7
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata7:/usr/share/elasticsearch/data

  esnode8:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: esnode8
    depends_on:
      - elasticsearch
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 8g
    volumes:
      - ./esdata8:/usr/share/elasticsearch/data


  kibana:
    image: kibana:latest
    container_name: kibana
    volumes:
      - ./kibana/config/:/usr/share/kibana/config
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
